#!/usr/bin/with-contenv sh

if [ -z "${POSTGRESQL_CONFIG}" ]; then
    if [ -z "${POSTGRESQL_CONFIGSCRIPT}" ]; then
        echo "==> Configuring postgresql from environment"

        su -c "initdb /var/lib/postgresql/data" postgres

        su -c "pg_ctl -D $PGDATA -o \"-c listen_addresses=''\" -w start" postgres
        sleep 4

        if [ ! -z "${POSTGRESQL_DATABASE}" ] && [ ! -z "${POSTGRESQL_USERNAME}" ] && [ ! -z "${POSTGRESQL_PASSWORD}" ] && [ ! -z "${POSTGRESQL_ADDRESS}" ]; then
            echo "==> Creating database and user"
            su -c "createuser ${POSTGRESQL_USERNAME}" postgres
            su -c "createdb -O${POSTGRESQL_USERNAME} ${POSTGRESQL_DATABASE}" postgres
            su -c "psql -c \"ALTER USER ${POSTGRESQL_USERNAME} WITH PASSWORD '${POSTGRESQL_PASSWORD}';\"" postgres
            echo "host ${POSTGRESQL_DATABASE} ${POSTGRESQL_USERNAME} ${POSTGRESQL_ADDRESS} md5" >> "/var/lib/postgresql/data/pg_hba.conf"
            su -c "pg_ctl reload" postgres
            sleep 4
        fi

        su -c "pg_ctl -m fast -w stop" postgres
        sleep 4

        echo "listen_addresses = '*'" >> "/var/lib/postgresql/data/postgresql.conf"
    else
        echo "==> Configuring postgresql from script"

        /bin/sh "${POSTGRESQL_CONFIGSCRIPT}"
        if [ $? -ne 0 ]; then
            echo "Failed to configure from script, aborting" >&2
            exit 1
        fi
    fi

    export POSTGRESQL_CONFIG=1
    printf "%s" "${POSTGRESQL_CONFIG}" > /var/run/s6/container_environment/POSTGRESQL_CONFIG
fi
